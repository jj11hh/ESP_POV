#include <FixedPoints.h>
#include <FixedPointsCommon.h>
#include "FixedPointsMath.h"

static const SQ15x16 sineTable[256] = {
0.0 ,
0.006159946638138647 ,
0.012319659535238442 ,
0.018478904959129905 ,
0.02463744919538197 ,
0.030795058556170353 ,
0.03695149938914489 ,
0.04310653808629557 ,
0.04925994109281685 ,
0.05541147491596995 ,
0.061560906133942835 ,
0.06770800140470745 ,
0.07385252747487396 ,
0.07999425118854163 ,
0.08613293949614599 ,
0.09226835946330199 ,
0.0984002782796427 ,
0.10452846326765346 ,
0.11065268189150083 ,
0.1167727017658563 ,
0.12288829066471411 ,
0.12899921653020327 ,
0.13510524748139296 ,
0.14120615182309137 ,
0.1473016980546375 ,
0.15339165487868536 ,
0.1594757912099808 ,
0.16555387618412995 ,
0.1716256791663596 ,
0.1776909697602686 ,
0.18374951781657034 ,
0.18980109344182575 ,
0.19584546700716696 ,
0.20188240915701025 ,
0.20791169081775931 ,
0.21393308320649745 ,
0.2199463578396686 ,
0.22595128654174768 ,
0.23194764145389815 ,
0.23793519504261879 ,
0.24391372010837714 ,
0.24988298979423082 ,
0.2558427775944356 ,
0.2617928573630403 ,
0.2677330033224679 ,
0.27366299007208283 ,
0.2795825925967438 ,
0.28549158627534205 ,
0.2913897468893246 ,
0.2972768506312027 ,
0.30315267411304353 ,
0.3090169943749474 ,
0.31486958889350786 ,
0.32071023559025513 ,
0.3265387128400833 ,
0.3323547994796597 ,
0.33815827481581706 ,
0.3439489186339281 ,
0.34972651120626114 ,
0.35549083330031805 ,
0.3612416661871529 ,
0.36697879164967206 ,
0.37270199199091397 ,
0.3784110500423103 ,
0.38410574917192586 ,
0.38978587329267933 ,
0.3954512068705425 ,
0.4011015349327188 ,
0.40673664307580015 ,
0.41235631747390344 ,
0.41796034488678346 ,
0.4235485126679243 ,
0.42912060877260894 ,
0.4346764217659649 ,
0.44021574083098736 ,
0.44573835577653825 ,
0.45124405704532283 ,
0.4567326357218406 ,
0.4622038835403132 ,
0.4676575928925868 ,
0.47309355683601007 ,
0.4785115691012865 ,
0.4839114241003016 ,
0.48929291693392357 ,
0.4946558433997788 ,
0.49999999999999994 ,
0.5053251839489481 ,
0.510631193180907 ,
0.5159178263577511 ,
0.521184882876585 ,
0.5264321628773557 ,
0.531659467250436 ,
0.53686659764418 ,
0.5420533564724492 ,
0.5472195469221112 ,
0.5523649729605058 ,
0.5574894393428855 ,
0.562592751619823 ,
0.5676747161445902 ,
0.5727351400805052 ,
0.5777738314082511 ,
0.5827905989331609 ,
0.5877852522924731 ,
0.5927576019625549 ,
0.5977074592660936 ,
0.6026346363792563 ,
0.6075389463388169 ,
0.61242020304925 ,
0.6172782212897929 ,
0.6221128167214739 ,
0.6269238058941065 ,
0.6317110062532509 ,
0.6364742361471414 ,
0.6412133148335782 ,
0.6459280624867874 ,
0.650618300204242 ,
0.6552838500134536 ,
0.6599245348787226 ,
0.664540178707858 ,
0.6691306063588582 ,
0.6736956436465572 ,
0.6782351173492339 ,
0.6827488552151855 ,
0.6872366859692627 ,
0.6916984393193699 ,
0.6961339459629265 ,
0.700543037593291 ,
0.7049255469061472 ,
0.7092813076058534 ,
0.7136101544117522 ,
0.7179119230644418 ,
0.7221864503320092 ,
0.7264335740162241 ,
0.7306531329586932 ,
0.7348449670469757 ,
0.7390089172206591 ,
0.7431448254773941 ,
0.7472525348788909 ,
0.7513318895568732 ,
0.7553827347189936 ,
0.7594049166547072 ,
0.763398282741103 ,
0.7673626814486969 ,
0.7712979623471806 ,
0.7752039761111298 ,
0.7790805745256704 ,
0.7829276104921027 ,
0.7867449380334831 ,
0.7905324123001634 ,
0.7942898895752861 ,
0.7980172272802395 ,
0.8017142839800667 ,
0.8053809193888326 ,
0.8090169943749475 ,
0.8126223709664456 ,
0.8161969123562216 ,
0.8197404829072211 ,
0.8232529481575872 ,
0.8267341748257635 ,
0.8301840308155506 ,
0.8336023852211195 ,
0.8369891083319778 ,
0.8403440716378927 ,
0.8436671478337662 ,
0.8469582108244671 ,
0.8502171357296141 ,
0.8534437988883159 ,
0.8566380778638627 ,
0.8597998514483723 ,
0.8629289996673897 ,
0.8660254037844386 ,
0.8690889463055282 ,
0.8721195109836108 ,
0.8751169828229927 ,
0.8780812480836979 ,
0.8810121942857845 ,
0.883909710213612 ,
0.8867736859200619 ,
0.8896040127307095 ,
0.8924005832479478 ,
0.8951632913550623 ,
0.897892032220258 ,
0.9005867023006374 ,
0.9032471993461288 ,
0.9058734224033671 ,
0.9084652718195236 ,
0.9110226492460882 ,
0.9135454576426009 ,
0.9160336012803335 ,
0.918486985745923 ,
0.9209055179449536 ,
0.9232891061054893 ,
0.9256376597815562 ,
0.9279510898565746 ,
0.9302293085467402 ,
0.9324722294043558 ,
0.9346797673211107 ,
0.9368518385313106 ,
0.9389883606150565 ,
0.9410892525013715 ,
0.9431544344712774 ,
0.9451838281608196 ,
0.9471773565640402 ,
0.9491349440359013 ,
0.9510565162951535 ,
0.9529420004271565 ,
0.9547913248866443 ,
0.9566044195004407 ,
0.9583812154701222 ,
0.9601216453746281 ,
0.961825643172819 ,
0.9634931442059831 ,
0.965124085200289 ,
0.9667184042691874 ,
0.9682760409157589 ,
0.9697969360350095 ,
0.9712810319161138 ,
0.9727282722446048 ,
0.9741386021045101 ,
0.9755119679804366 ,
0.9768483177596007 ,
0.9781476007338057 ,
0.9794097676013659 ,
0.9806347704689777 ,
0.9818225628535369 ,
0.9829730996839018 ,
0.9840863373026044 ,
0.9851622334675064 ,
0.9862007473534026 ,
0.987201839553569 ,
0.9881654720812594 ,
0.989091608371146 ,
0.989980213280707 ,
0.9908312530915603 ,
0.9916446955107427 ,
0.9924205096719357 ,
0.9931586661366362 ,
0.9938591368952737 ,
0.9945218953682733 ,
0.9951469164070644 ,
0.9957341762950345 ,
0.9962836527484294 ,
0.9967953249171991 ,
0.997269173385788 ,
0.9977051801738729 ,
0.9981033287370441 ,
0.9984636039674339 ,
0.99878599219429 ,
0.9990704811844932 ,
0.9993170601430229 ,
0.9995257197133659 ,
0.9996964519778716 ,
0.9998292504580527 ,
0.9999241101148306 ,
0.9999810273487268 ,
1.0 
};

SQ15x16 sinfp(SQ15x16 a)
{
  bool flip = false;
  if (a < 0) {
    flip = !flip;
    a = -a;
  }

  a = modfp(a, (2 * SQ15x16::Pi));
  if (a > SQ15x16::Pi){
    flip = !flip;
    a -= SQ15x16::Pi;
  }
  if (a > SQ15x16::Pi / 2){
    a = (-a) + SQ15x16::Pi;  
  }
  int index = ((2 * a / SQ15x16::Pi) * 255).getInteger();
  if (flip) 
    return -sineTable[index];
  else
    return sineTable[index];
}

SQ15x16 atan2fp(SQ15x16 y, SQ15x16 x)
{
  if (x != 0){
    if (absfp(x) > absfp(y)){
      const SQ15x16 z = y / x;
      if (x > 0){
        return atanfp(z);  
      }
      else if (y >= 0.0){
        return atanfp(z) + SQ15x16::Pi;  
      }
      else {
        return atanfp(z) - SQ15x16::Pi;  
      }
    }
    else {
      const SQ15x16 z = x / y;
      if (y > 0){
        return -atanfp(z) + (SQ15x16::Pi/2);  
      }
      else{
        return -atanfp(z) - (SQ15x16::Pi/2);  
      }  
    }
  }
  else{
    if (y > 0){
      return SQ15x16::Pi / 2;  
    }  
    else if (y < 0){
      return - SQ15x16::Pi / 2;
    }
  }

  return 0;
}
